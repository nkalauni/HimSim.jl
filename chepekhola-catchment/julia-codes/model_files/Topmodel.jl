using ModelingToolkit
using DifferentialEquations
using Plots
using Distributions
using SpecialFunctions
using DomainSets

const Î¼ = 3

@variables Î¶ t Suz(t) Ssz(t)              #Stores
@variables P(t) Ep(t)                   #Forcings
@parameters Suzmax St Kd q0 f Ï‡ Ï•
D = Differential(t)

function ShiftedGamma(Î¶, Ï‡, Ï•)
    if Î¶ > Î¼
        fvalue = 1 / (Ï‡ * gamma(Ï•)) * ((Î¶ - Î¼) / Ï‡)^(Ï•-1) * exp(-(Î¶ - Î¼) / Ï‡)
    else
        fvalue = 0
    end
    return fvalue
end

@register_symbolic ShiftedGamma(Î¶, Ï‡, Ï•)



@named topmodel = ODESystem([D(Suz) ~ Peff - Qex - Ea - Qv,
                            D(Ssz) ~ -Qv + Qb,
                            Ea ~ min(Suz / (St * Suzmax), 1) * Ep,
                            Qv ~ max((Suz - St * Suzmax) / (Suzmax * (1-St)) * Kd, 0),
                            Qex ~ Suz == Suzmax ? Peff : 0,
                            Peff = P * (1 - Ac),
                            Qb = q0 * exp(-f * Ssz),
                            Qof = Ac * P,
                            QðŸ’§ = Qof + Qex + Qb,
                            Î» = Ï‡ * Ï• + Î¼,
                            Ï‡crit = f * Ssz + Î»,
                            IÎ¶ = Integral(Î¶ in DomainSets.ClosedInterval(Ï‡crit, Inf)),
                            Ac = IÎ¶(ShiftedGamma(Î¶, Ï‡, Ï•))])