(undo-tree-save-format-version . 1)
"63b17a4b96ce2aed401355b5e9a31ac575b4bddc"
[nil nil nil nil (25798 3409 958025 48000) 0 nil]
([nil nil ((nil rear-nonsticky nil 2423 . 2424) (nil fontified nil 1 . 2424) (1 . 2424) (t 25798 3333 875159 882000)) nil (25798 3409 958023 465000) 0 nil])
([nil nil ((2424 . 2425) 1) nil (25798 3409 958018 994000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -271) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 272 (271 . 272) (254 . 268) (251 . 254) (#("Utils.jl" 0 8 (face font-lock-string-face fontified t)) . 251) (undo-tree-id28 . -7) (t 25798 3410 82159 926000)) nil (25798 15495 502082 670000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . -258) (undo-tree-id24 . -1) 259 (258 . 259) (254 . 258) (#("a" 0 1 (face font-lock-string-face fontified t)) . -255) (undo-tree-id25 . -1) 256 (255 . 256)) nil (25798 15495 502067 126000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -434) (undo-tree-id6 . -1) 435 (#("t" 0 1 (fontified t)) . -434) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("o" 0 1 (fontified t)) . -435) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("o" 0 1 (fontified t)) . -436) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("l" 0 1 (fontified t)) . -437) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("s" 0 1 (fontified t)) . -438) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 439 (434 . 439) (#("T" 0 1 (fontified t)) . -434) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("o" 0 1 (fontified t)) . -435) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("o" 0 1 (fontified t)) . -436) (undo-tree-id21 . -1) (#("l" 0 1 (fontified t)) . -437) (undo-tree-id22 . -1) 438 (434 . 438) (#("Utils" 0 5 (fontified t)) . 434) (undo-tree-id23 . -4)) nil (25798 15495 502051 367000) 0 nil])
([nil nil ((264 . 269) (#("tools" 0 5 (face font-lock-string-face fontified t)) . 264) (undo-tree-id5 . -4)) nil (25798 15495 501998 773000) 0 nil])
([nil nil ((240 . 249) (239 . 240) 227) nil (25798 15495 501993 33000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -263) (undo-tree-id0 . 1) (262 . 263) (259 . 261) (#("a" 0 1 (fontified t)) . -259) (undo-tree-id1 . -1) 260 (250 . 260) (#("y" 0 1 (fontified t)) . -250) (undo-tree-id2 . -1) (#("s" 0 1 (fontified t)) . -251) (undo-tree-id3 . -1) (#("u" 0 1 (fontified t)) . -252) (undo-tree-id4 . -1) 253 (250 . 253) (249 . 250) 248) nil (25798 15495 501985 261000) 0 nil])
([nil nil ((262 . 278)) nil (25798 15495 501811 943000) 0 nil])
([nil nil ((240 . 253) (239 . 240) 238) nil (25798 15495 501797 808000) 0 nil])
([nil nil ((516 . 530) (#("che" 0 3 (fontified nil)) . 516) (516 . 519) (#("chepe_data.csv" 0 14 (fontified nil)) . -516) (516 . 530) (#("che" 0 3 (face font-lock-string-face fontified t)) . -516) (undo-tree-id116 . -3) (undo-tree-id117 . -3) 519 (516 . 519) (505 . 516) (#("input-data" 0 6 (face font-lock-string-face fontified nil) 6 10 (fontified nil)) . 505) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (511 . 515) (#("input-data/" 0 11 (fontified nil)) . -511) (511 . 522) (#("data" 0 4 (face font-lock-string-face fontified t)) . -511) (undo-tree-id120 . -4) (undo-tree-id121 . -4) 515 (505 . 515) (502 . 505) (499 . 502) (#("julia/chepe_data.csv" 0 20 (face font-lock-string-face fontified t)) . 499) (undo-tree-id122 . -19) (undo-tree-id123 . -17) 516 (t 25798 15495 847950 186000)) nil (25798 16486 312429 436000) 0 nil])
([nil nil ((1933 . 1934) (#("
" 0 1 (fontified t)) . -1933) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -1934) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -1935) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -1936) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t)) . -1937) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t)) . -1938) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(" " 0 1 (fontified t)) . -1939) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t)) . -1940) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t)) . -1941) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t)) . -1942) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t)) . -1943) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t)) . -1944) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(" " 0 1 (fontified t)) . -1945) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#(" " 0 1 (fontified t)) . -1946) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 1947 (#(" " 0 1 (fontified t)) . -1947) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#(" " 0 1 (fontified t)) . -1948) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -1949) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (fontified t)) . -1950) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 1951 (#(" " 0 1 (fontified t)) . -1951) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t)) . -1952) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (fontified t)) . -1953) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#(" " 0 1 (fontified t)) . -1954) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t)) . -1955) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t)) . -1956) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(" " 0 1 (fontified t)) . -1957) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t)) . -1958) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t)) . -1959) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t)) . -1960) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t)) . -1961) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t)) . -1962) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t)) . -1963) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t)) . -1964) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t)) . -1965) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t)) . -1966) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#(" " 0 1 (fontified t)) . -1967) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#(" " 0 1 (fontified nil)) . -1968) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -1969) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(" " 0 1 (fontified t)) . -1970) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t)) . -1971) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 1972) nil (25798 16486 312404 359000) 0 nil])
([nil nil ((2092 . 2096) (#("NelderMead" 0 10 (fontified t)) . 2092) (undo-tree-id34 . -9)) nil (25798 16486 312152 825000) 0 nil])
([nil nil ((270 . 278) (#("a" 0 1 (fontified t)) . -270) (undo-tree-id32 . -1) (#("r" 0 1 (fontified t)) . -271) (undo-tree-id33 . -1) 272 (261 . 272) (240 . 261) (239 . 240) 238) nil (25798 16486 312148 828000) 0 nil])
([nil nil ((#("MAE" 0 3 (fontified t)) . 2132) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2)) nil (25798 16487 862603 644000) 0 nil])
([nil nil ((2131 . 2134) (#("C" 0 1 (fontified t)) . -2131) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) 2132) nil (25798 18632 836241 967000) 0 nil] [nil nil ((nil rear-nonsticky nil 2134 . 2135) (nil fontified nil 2132 . 2135) (2132 . 2135) 2131) ((#("MAE" 0 2 (fontified nil) 2 3 (rear-nonsticky nil fontified nil)) . 2132) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -2) (undo-tree-id133 . -3) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -3) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -3) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (nil rear-nonsticky t 2134 . 2135)) (25798 16486 313215 38000) 0 nil])
([nil nil ((2143 . 2154) (2138 . 2143) (#("i" 0 1 (fontified t)) . -2138) (undo-tree-id309 . -1) 2139 (2131 . 2139) (#("C" 0 1 (fontified t)) . -2131) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) 2132 (#("MA" 0 2 (fontified t)) . 2132) (undo-tree-id314 . -1) (undo-tree-id315 . -1)) nil (25798 18632 836238 792000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2137 . 2138) (nil fontified nil 2135 . 2138) (2135 . 2138) 2134) ((#("MAE" 0 2 (fontified nil) 2 3 (rear-nonsticky nil fontified nil)) . 2135) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -3) (undo-tree-id128 . -2) (nil rear-nonsticky t 2137 . 2138)) (25798 16486 266874 193000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 2103) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1)) nil (25798 18632 836234 885000) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified t)) . 2102) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1)) nil (25798 18632 836232 538000) 0 nil])
([nil nil ((#("ar" 0 2 (fontified t)) . 2100) (undo-tree-id296 . -2) (undo-tree-id297 . -1) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2)) nil (25798 18632 836230 561000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 2099) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1)) nil (25798 18632 836227 732000) 0 nil])
([nil nil ((2101 . 2107) (#("optsol" 0 6 (fontified t)) . 2101) (undo-tree-id291 . -5)) nil (25798 18632 836224 816000) 0 nil])
([nil nil ((2099 . 2101) (#("u0" 0 2 (fontified nil)) . 2099) (2099 . 2101) (#("u0" 0 2 (fontified t)) . -2099) (undo-tree-id289 . -2) (undo-tree-id290 . -2) 2101 (2099 . 2101)) nil (25798 18632 836223 573000) 0 nil])
([nil nil ((2099 . 2104) (#("param" 0 5 (fontified nil)) . 2099) (2099 . 2104) (#("param" 0 5 (fontified t)) . -2099) (undo-tree-id286 . -5) (undo-tree-id287 . -5) 2104 (2099 . 2104) (#("u0" 0 2 (fontified t)) . 2099) (undo-tree-id288 . -1)) nil (25798 18632 836221 639000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 1944) (undo-tree-id285 . -1)) nil (25798 18632 836219 321000) 0 nil])
([nil nil ((1942 . 1944) (#("it" 0 2 (fontified t)) . 1942) (undo-tree-id284 . -1)) nil (25798 18632 836218 290000) 0 nil])
([nil nil ((1951 . 1964) (#("s" 0 1 (fontified t)) . -1951) (undo-tree-id279 . -1) (undo-tree-id280 . -1) 1952 (1950 . 1952) (1940 . 1949) (#("w" 0 1 (fontified t)) . -1940) (undo-tree-id281 . -1) 1941 (#("Tsc" 0 3 (fontified t)) . 1940) (undo-tree-id282 . -2) (undo-tree-id283 . -3) 1943) nil (25798 18632 836216 310000) 0 nil])
([nil nil ((1812 . 1816) (#("1" 0 1 (fontified t)) . -1812) (undo-tree-id278 . -1) 1813 (1800 . 1813)) nil (25798 18632 836205 117000) 0 nil])
([nil nil ((1812 . 1816) (#("True" 0 4 (fontified t)) . 1812) (undo-tree-id3765 . -4) (undo-tree-id3766 . -3) (undo-tree-id3767 . -4) (undo-tree-id3768 . -4) (undo-tree-id3769 . -4) (undo-tree-id3770 . -2) (undo-tree-id3771 . -4) 1816 (t 25798 18633 15752 727000)) nil (25798 19026 501986 168000) 0 nil])
([nil nil ((1796 . 1797)) nil (25798 19026 506456 524000) 0 nil])
([nil nil ((#("Rosenbrock23()" 0 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil)) . 1763) (#(" maxiters=100_000," 0 1 (fontified nil) 1 10 (fontified nil) 10 14 (fontified nil) 14 18 (fontified nil)) . 1778) (undo-tree-id3774 . -18) (1763 . 1777) (#("AutoVern" 0 8 (fontified nil)) . 1763) (undo-tree-id3775 . -8) (undo-tree-id3776 . -8) (1763 . 1771) (#("alg_hints = [:stiff]" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (face julia-quoted-symbol-face fontified t) 14 15 (face julia-quoted-symbol-face fontified t) 15 16 (face julia-quoted-symbol-face fontified t) 16 17 (face julia-quoted-symbol-face fontified t) 17 18 (face julia-quoted-symbol-face fontified t) 18 19 (face julia-quoted-symbol-face fontified t) 19 20 (fontified t)) . 1763) (undo-tree-id3777 . -20) (undo-tree-id3778 . -19) (undo-tree-id3779 . -19) (undo-tree-id3780 . -20) (undo-tree-id3781 . -20) (undo-tree-id3782 . -20) (undo-tree-id3783 . -20) (undo-tree-id3784 . -20) (undo-tree-id3785 . -20) (undo-tree-id3786 . -20) (undo-tree-id3787 . -20) (undo-tree-id3788 . -20) (undo-tree-id3789 . -20) (undo-tree-id3790 . -20)) ((1763 . 1783) (#("AutoVern" 0 8 (fontified nil)) . 1763) (undo-tree-id3772 . -8) (undo-tree-id3773 . -8) (1763 . 1771) (#("Rosenbrock23()" 0 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil)) . 1763) (1778 . 1796) (1763 . 1777)) (25798 19028 885450 796000) 0 nil])
([nil nil ((1773 . 1777) (1764 . 1765) (#("O" 0 1 (fontified t)) . -1764) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) 1765 (1763 . 1773)) nil (25798 21660 87494 526000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1775) (undo-tree-id3840 . -1) (#("b" 0 1 (fontified t)) . -1776) (undo-tree-id3841 . -1) 1777 (1775 . 1777) (#("()" 0 2 (fontified t)) . 1775) (undo-tree-id3842 . -2) (undo-tree-id3843 . -1) (undo-tree-id3844 . -2) (undo-tree-id3845 . -2) (undo-tree-id3846 . -2) (undo-tree-id3847 . -2) 1777) nil (25798 21660 87491 792000) 0 nil])
([nil nil ((#("Rosenbrock2" 0 11 (fontified t)) . 1763) (undo-tree-id3838 . -10) (undo-tree-id3839 . -11) 1774) nil (25798 21660 87484 353000) 0 nil])
([nil nil ((1763 . 1771) (#("3" 0 1 (fontified t)) . -1763) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) 1764) nil (25798 21660 87481 988000) 0 nil])
([nil nil ((#("TRBDF2" 0 6 (fontified t)) . 1763) (undo-tree-id3832 . -5)) nil (25798 21660 87478 443000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1769) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . 1) (undo-tree-id3828 . -1) (#(")" 0 1 (fontified t)) . -1770) (undo-tree-id3829 . -1) (undo-tree-id3830 . 1) (undo-tree-id3831 . -1) 1771 (1763 . 1771)) nil (25798 21660 87476 966000) 0 nil])
([nil nil ((1763 . 1769) (#("Rodas4" 0 6 (fontified t)) . 1763) (undo-tree-id3824 . -5)) nil (25798 21660 87471 78000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1793) (undo-tree-id3820 . -1) (#("0" 0 1 (fontified t)) . -1794) (undo-tree-id3821 . -1) 1795 (1792 . 1795) (#("-" 0 1 (fontified t)) . -1792) (undo-tree-id3822 . -1) (#("-" 0 1 (fontified t)) . -1793) (undo-tree-id3823 . -1) 1794 (1787 . 1794) (1784 . 1787) (1773 . 1785)) nil (25798 21660 87468 355000) 0 nil])
([nil nil ((1793 . 1795) (#(" " 0 1 (fontified t)) . -1793) (undo-tree-id3816 . 1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (#("," 0 1 (fontified t)) . -1794) (undo-tree-id3819 . -1) 1795 (1794 . 1795)) nil (25798 21660 87464 177000) 0 nil])
([nil nil ((1793 . 1795)) nil (25798 21660 87459 607000) 0 nil])
([nil nil ((1795 . 1798)) nil (25798 21660 87459 115000) 0 nil])
([nil nil ((1563 . 1577) (1562 . 1563) 1561) nil (25798 21660 87458 436000) 0 nil])
([nil nil ((#("00" 0 2 (fontified t)) . 1811) (undo-tree-id3814 . -1) (undo-tree-id3815 . -2) 1813) nil (25798 21660 87457 198000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1810) (undo-tree-id3813 . -1) 1811) nil (25798 21660 87454 999000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1809) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) 1810) nil (25798 21660 87451 903000) 0 nil])
([nil nil ((#("AutoTsit5" 0 9 (fontified t)) . 1965) (undo-tree-id3808 . -8) (undo-tree-id3809 . -9)) nil (25798 21660 87448 669000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1965) (undo-tree-id3806 . 1) (undo-tree-id3807 . -1)) nil (25798 21660 87446 376000) 0 nil])
([nil nil ((#("Rosenbrock23" 0 12 (fontified t)) . 1965) (undo-tree-id3805 . -11)) nil (25798 21660 87444 162000) 0 nil])
([nil nil ((#("()), " 0 5 (fontified t)) . 1965) (undo-tree-id3800 . -4) (undo-tree-id3801 . 5) (undo-tree-id3802 . -1) (undo-tree-id3803 . 4) (undo-tree-id3804 . -2)) nil (25798 21660 87440 95000) 0 nil])
([nil nil ((1965 . 1975)) nil (25798 21660 87425 878000) 0 nil])
([nil nil ((2047 . 2050)) nil (25798 21660 87425 133000) 0 nil])
([nil nil ((2060 . 2064) (#("false" 0 3 (face font-lock-constant-face fontified t) 3 5 (face font-lock-constant-face fontified t)) . 2060) (undo-tree-id3799 . -4)) nil (25798 21660 87424 169000) 0 nil])
([nil nil ((1783 . 1784) (#("5" 0 1 (fontified t)) . -1783) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) 1784 (#("t" 0 1 (fontified t)) . -2159) (undo-tree-id3795 . -1) 2160 (#("CMAEvolutionStrategyOp" 0 22 (fontified t)) . 2159) (undo-tree-id3796 . -22) (undo-tree-id3797 . -21) (undo-tree-id3798 . -22) 2181) nil (25798 21660 87421 345000) 0 nil])
([nil nil ((1783 . 1784) (#("4" 0 1 (fontified t)) . -1783) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) 1784) nil (25798 21660 87409 241000) 0 nil])
([nil nil ((2159 . 2169)) nil (25798 21660 86818 951000) 0 nil])
([nil nil ((2171 . 2187)) nil (25798 21660 86813 131000) 0 nil])
([nil nil ((apply -2 126 154 undo--wrap-and-run-primitive-undo 126 154 ((126 . 128))) (t 25798 21660 271353 220000)) nil (25798 36938 444008 548000) 0 nil])
([nil nil ((apply -2 172 198 undo--wrap-and-run-primitive-undo 172 198 ((172 . 174)))) nil (25798 36938 444007 487000) 0 nil])
([nil nil ((apply -2 154 174 undo--wrap-and-run-primitive-undo 154 174 ((154 . 156)))) nil (25798 36938 444006 749000) 0 nil])
([nil nil ((apply -2 200 235 undo--wrap-and-run-primitive-undo 200 235 ((200 . 202)))) nil (25798 36938 444005 848000) 0 nil])
([nil nil ((apply -2 235 250 undo--wrap-and-run-primitive-undo 235 250 ((235 . 237)))) nil (25799 5833 735294 590000) 0 nil])
([nil nil ((1115 . 1123) (#("0" 0 1 (fontified t)) . -1115) (undo-tree-id422 . -1) (#("." 0 1 (fontified t)) . -1116) (undo-tree-id423 . -1) (#("0" 0 1 (fontified t)) . -1117) (undo-tree-id424 . -1) (#("1" 0 1 (fontified t)) . -1118) (undo-tree-id425 . -1) 1119 (1115 . 1121) (1101 . 1115) (1100 . 1101) (1088 . 1100) (1079 . 1088) (1076 . 1079) (#(" " 0 1 (fontified t)) . -1076) (undo-tree-id426 . -1) (#(" " 0 1 (fontified t)) . -1077) (undo-tree-id427 . -1) (#(" " 0 1 (fontified t)) . -1078) (undo-tree-id428 . -1) 1079 (1071 . 1079) (t 25798 36938 585128 554000) 1070) nil (25799 7199 13997 985000) 0 nil] [nil nil ((1085 . 1086) (#("s" 0 1 (fontified t)) . -1085) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("y" 0 1 (fontified t)) . -1086) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("n" 0 1 (fontified t)) . -1087) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("c" 0 1 (fontified t)) . -1088) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("m" 0 1 (fontified t)) . -1089) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("a" 0 1 (fontified t)) . -1090) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("p" 0 1 (fontified t)) . -1091) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 1092 (1084 . 1092) (#("a" 0 1 (fontified nil)) . 1084) (1084 . 1085) (#("asyncmap" 0 8 (fontified nil)) . -1084) (1084 . 1092) (#("a" 0 1 (fontified t)) . -1084) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 1085 (1079 . 1085) (1071 . 1079) (t 25798 36938 585128 554000) 1034) ((#("
       " 0 1 (fontified t) 1 8 (fontified nil)) . 1071) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -1) (undo-tree-id41 . -8) (undo-tree-id42 . -1) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) (undo-tree-id102 . -8) (undo-tree-id103 . -8) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (#("Ps ~ a" 0 5 (fontified nil) 5 6 (fontified nil)) . 1079) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -5) (undo-tree-id174 . -5) (undo-tree-id175 . -5) (undo-tree-id176 . -5) (undo-tree-id177 . -5) (undo-tree-id178 . -5) (undo-tree-id179 . -5) (undo-tree-id180 . -5) (undo-tree-id181 . -5) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -5) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -5) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -2) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (1084 . 1085) (#("asyncmap" 0 8 (fontified nil)) . 1084) (1084 . 1092) (#("a" 0 1 (fontified nil)) . 1084) (1084 . 1085) (#("asyncmap" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 1084) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (1085 . 1092) (#("b" 0 1 (fontified t)) . 1085) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1)) (25799 5833 581830 779000) 0 nil] [nil nil ((#("       " 0 7 (fontified t)) . -1072) (undo-tree-id0 . -7) 1079 (1071 . 1079) (t 25798 36938 585128 554000) 1027) ((#("
       " 0 1 (fontified t) 1 8 (fontified nil)) . 1071) (undo-tree-id1 . -8) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (1072 . 1079)) (25799 5801 700495 394000) 0 nil])
([nil nil ((1125 . 1126)) nil (25799 7199 13992 845000) 0 nil])
([nil nil ((1087 . 1095) (1086 . 1087)) ((#("," 0 1 (fontified nil)) . 1086) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("
       " 0 8 (fontified t)) . 1087) (undo-tree-id27 . -7) (undo-tree-id28 . -1) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7)) (25799 5833 581370 976000) 0 nil])
nil
([nil nil ((apply -2 1027 1074 undo--wrap-and-run-primitive-undo 1027 1074 ((1031 . 1033) 1070))) nil (25799 7199 13991 846000) 0 nil])
nil
([nil nil ((383 . 398) (#("c" 0 1 (fontified t)) . -383) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("m" 0 1 (fontified t)) . -384) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("o" 0 1 (fontified t)) . -385) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("o" 0 1 (fontified nil)) . -386) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("t" 0 1 (fontified t)) . -387) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("h" 0 1 (fontified t)) . -388) (undo-tree-id419 . -1) (#("e" 0 1 (fontified t)) . -389) (undo-tree-id420 . -1) (#("r" 0 1 (fontified t)) . -390) (undo-tree-id421 . -1) 391 (377 . 391) (376 . 377) (375 . 376) 374) nil (25799 7199 13990 72000) 0 nil])
([nil nil ((383 . 391) (#("smoother" 0 8 (face font-lock-variable-name-face fontified t)) . 383) (undo-tree-id407 . -5) (undo-tree-id408 . -7)) nil (25799 7199 13983 328000) 0 nil])
([nil nil ((1140 . 1148) (#("smoother" 0 8 (fontified t)) . 1140) (undo-tree-id406 . -7)) nil (25799 7199 13978 849000) 0 nil])
([nil nil ((1047 . 1050) (1031 . 1047) (1026 . 1031) (1026 . 1027) (1025 . 1026) 1024) nil (25799 7199 13977 320000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1147) (undo-tree-id403 . -1) (#("a" 0 1 (fontified t)) . -1148) (undo-tree-id404 . -1) (#("a" 0 1 (fontified t)) . -1149) (undo-tree-id405 . -1) 1150 (1147 . 1150)) nil (25799 7199 13975 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1094 . 1095) (nil fontified nil 1050 . 1095) (1050 . 1095) 1049) nil (25799 7199 13973 912000) 0 nil])
([nil nil ((#("," 0 1 (rear-nonsticky t fontified t)) . -1094) (undo-tree-id402 . -1) 1095) nil (25799 7199 13973 182000) 0 nil])
([nil nil ((1051 . 1054) (1050 . 1051) (#("P" 0 1 (fontified t)) . -1050) (undo-tree-id396 . -1) (#("(" 0 1 (fontified t)) . -1051) (undo-tree-id397 . -1) (#("t" 0 1 (fontified t)) . -1052) (undo-tree-id398 . -1) (#(")" 0 1 (fontified t)) . -1053) (undo-tree-id399 . -1) (undo-tree-id400 . 1) (undo-tree-id401 . -1) 1054) nil (25799 7199 13971 730000) 0 nil])
([nil nil ((1039 . 1053) (1038 . 1039) (1030 . 1038) (#("LinR" 0 4 (fontified nil)) . 1030) (1030 . 1034) (#("LinRange" 0 8 (fontified nil)) . -1030) (1030 . 1038) (#("LinR" 0 4 (fontified t)) . -1030) (undo-tree-id394 . -4) (undo-tree-id395 . -4) 1034 (1026 . 1034) (1025 . 1026) 1024) nil (25799 7199 13968 60000) 0 nil])
([nil nil ((1087 . 1090) (#("T" 0 1 (fontified t)) . -1087) (undo-tree-id367 . -1) (#("t" 0 1 (fontified t)) . -1088) (undo-tree-id368 . -1) 1089 (1083 . 1084) (#("T" 0 1 (fontified t)) . -1083) (undo-tree-id369 . -1) (#("(" 0 1 (fontified t)) . -1084) (undo-tree-id370 . -1) (#("t" 0 1 (fontified t)) . -1085) (undo-tree-id371 . -1) (#(")" 0 1 (fontified t)) . -1086) (undo-tree-id372 . -1) (undo-tree-id373 . 1) (undo-tree-id374 . -1) 1087 (1059 . 1060) (#("[" 0 1 (fontified t)) . -1059) (undo-tree-id375 . -1) (#("i" 0 1 (fontified t)) . -1060) (undo-tree-id376 . -1) (#(" " 0 1 (fontified t)) . -1061) (undo-tree-id377 . -1) (#("f" 0 1 (fontified t)) . -1062) (undo-tree-id378 . -1) (#("o" 0 1 (fontified t)) . -1063) (undo-tree-id379 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -1064) (undo-tree-id380 . -1) (#(" " 0 1 (fontified t)) . -1065) (undo-tree-id381 . -1) (#("i" 0 1 (fontified t)) . -1066) (undo-tree-id382 . -1) (#(" " 0 1 (fontified t)) . -1067) (undo-tree-id383 . -1) (#("i" 0 1 (fontified t)) . -1068) (undo-tree-id384 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified nil)) . -1069) (undo-tree-id385 . -1) (#(" " 0 1 (fontified t)) . -1070) (undo-tree-id386 . -1) (#("1" 0 1 (fontified t)) . -1071) (undo-tree-id387 . -1) (#(":" 0 1 (fontified t)) . -1072) (undo-tree-id388 . -1) (#("5" 0 1 (fontified t)) . -1073) (undo-tree-id389 . -1) (#("0" 0 1 (fontified t)) . -1074) (undo-tree-id390 . -1) (#("]" 0 1 (fontified t)) . -1075) (undo-tree-id391 . -1) (undo-tree-id392 . 1) (undo-tree-id393 . -1) 1076) nil (25799 7199 13961 297000) 0 nil])
([nil nil ((1104 . 1105)) nil (25799 7199 13947 553000) 0 nil])
([nil nil ((1085 . 1086)) nil (25799 7199 13947 154000) 0 nil])
([nil nil ((1030 . 1038)) nil (25799 7199 13946 695000) 0 nil])
([nil nil ((1061 . 1062)) nil (25799 7199 13946 310000) 0 nil])
([nil nil ((1090 . 1091)) nil (25799 7199 13945 810000) 0 nil])
([nil nil ((1085 . 1086)) nil (25799 7199 13945 348000) 0 nil])
([nil nil ((1080 . 1081)) nil (25799 7199 13944 794000) 0 nil])
([nil nil ((apply -2 1026 1065 undo--wrap-and-run-primitive-undo 1026 1065 ((1026 . 1028)))) nil (25799 7199 13944 381000) 0 nil])
([nil nil ((apply -2 1065 1123 undo--wrap-and-run-primitive-undo 1065 1123 ((1065 . 1067)))) nil (25799 7199 13943 931000) 0 nil])
([nil nil ((apply 2 1026 1062 undo--wrap-and-run-primitive-undo 1026 1062 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1026) 1030))) nil (25799 7199 13943 388000) 0 nil])
([nil nil ((apply 2 1063 1118 undo--wrap-and-run-primitive-undo 1063 1118 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1063) 1067))) nil (25799 7199 13942 850000) 0 nil])
([nil nil ((1119 . 1120) (1078 . 1079)) nil (25799 7199 13942 303000) 0 nil])
([nil nil ((1247 . 1248) (1209 . 1210)) nil (25799 7199 13941 874000) 0 nil])
([nil nil ((1404 . 1405) (1399 . 1404) (#("p" 0 1 (fontified t)) . -1399) (undo-tree-id361 . -1) (undo-tree-id362 . -1) 1400 (1393 . 1400) (#("9" 0 1 (fontified t)) . -1393) (undo-tree-id363 . -1) 1394 (1392 . 1394) (1387 . 1392) (#(" " 0 1 (fontified t)) . -1387) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -1388) (undo-tree-id365 . -1) (#(" " 0 1 (fontified t)) . -1389) (undo-tree-id366 . -1) 1390 (1382 . 1390) 1381) nil (25799 7199 13940 121000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1444 . 1445) (nil fontified nil 1405 . 1445) (1405 . 1445) 1404) nil (25799 7199 13934 385000) 0 nil])
([nil nil ((1444 . 1445)) nil (25799 7199 13933 489000) 0 nil])
([nil nil ((1445 . 1446)) nil (25799 7199 13932 997000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1443) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . 1) (undo-tree-id360 . -1) 1444) nil (25799 7199 13932 227000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1404) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) 1405) nil (25799 7199 941485 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1120 . 1121) (#("
" 0 1 (fontified nil)) . -1178) (1120 . 1179) 1106) nil (25799 7966 201994 456000) 0 nil] [nil nil ((apply -2 1446 1493 undo--wrap-and-run-primitive-undo 1446 1493 ((1450 . 1452) 1489))) ((apply 2 1446 1491 undo--wrap-and-run-primitive-undo 1446 1491 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 1450) 1121))) (25799 7199 15248 980000) 0 nil])
([nil nil ((1184 . 1185) (1136 . 1142)) nil (25799 7966 201994 10000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1121 . 1122) (#("
" 0 1 (fontified nil)) . -1179) (1121 . 1180)) ((#("
plot(x, 10.0 * (1 ./ (1 .+ exp.((x .- 5.0) / SMOOTHER))))
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (fontified nil) 7 13 (fontified nil) 13 58 (fontified nil) 58 59 (fontified nil)) . 1121) (undo-tree-id429 . -1) (undo-tree-id430 . -58) (undo-tree-id431 . -1) (undo-tree-id432 . -58) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -5) (undo-tree-id437 . -1) (1179 . 1180) (nil rear-nonsticky t 1121 . 1122)) (25799 7199 8773 509000) 0 nil])
([nil nil ((apply -2 1511 1558 undo--wrap-and-run-primitive-undo 1511 1558 ((1515 . 1517)))) nil (25799 7966 201993 598000) 0 nil])
nil
([nil nil ((1627 . 1629) (1611 . 1627) (#(" " 0 1 (fontified t)) . -1611) (undo-tree-id462 . -1) (#(" " 0 1 (fontified t)) . -1612) (undo-tree-id463 . -1) (#(" " 0 1 (fontified t)) . -1613) (undo-tree-id464 . -1) 1614 (1606 . 1614) 1562) nil (25799 7966 201992 747000) 0 nil])
([nil nil ((apply -2 1558 1609 undo--wrap-and-run-primitive-undo 1558 1609 ((1562 . 1564) 1579))) nil (25799 7966 201990 538000) 0 nil])
([nil nil ((1631 . 1632)) nil (25799 7966 201990 130000) 0 nil])
([nil nil ((1660 . 1663) (#("r" 0 1 (fontified t)) . -1660) (undo-tree-id440 . -1) 1661 (#("
" 0 1 (fontified t)) . -1678) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (#(" " 0 1 (fontified t)) . -1679) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#(" " 0 1 (fontified t)) . -1680) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#(" " 0 1 (fontified nil)) . -1681) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#(" " 0 1 (fontified t)) . -1682) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("Q" 0 1 (fontified t)) . -1683) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("s" 0 1 (fontified t)) . -1684) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("c" 0 1 (fontified t)) . -1685) (undo-tree-id455 . -1) (#(" " 0 1 (fontified t)) . -1686) (undo-tree-id456 . -1) (#("~" 0 1 (fontified t)) . -1687) (undo-tree-id457 . -1) (#(" " 0 1 (fontified t)) . -1688) (undo-tree-id458 . -1) 1689 (1687 . 1689) (1683 . 1687) (#(" " 0 1 (fontified t)) . -1683) (undo-tree-id459 . -1) (#(" " 0 1 (fontified t)) . -1684) (undo-tree-id460 . -1) (#(" " 0 1 (fontified t)) . -1685) (undo-tree-id461 . -1) 1686 (1678 . 1686) 1655) nil (25799 7966 201987 742000) 0 nil])
([nil nil ((425 . 428) (#("Sfc" 0 3 (fontified t)) . 425) (undo-tree-id439 . -2)) nil (25799 7966 201975 293000) 0 nil])
([nil nil ((1699 . 1700) (#("S" 0 1 (fontified t)) . 1699)) nil (25799 7966 201973 364000) 0 nil])
([nil nil ((1702 . 1709)) nil (25799 7966 201972 532000) 0 nil])
([nil nil ((1847 . 1848) (#("S" 0 1 (fontified t)) . -1847) (undo-tree-id438 . -1) 1848) nil (25799 7966 202261 397000) 0 nil])
([nil nil ((2001 . 2005) (#("1" 0 1 (fontified t)) . -2001) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("0" 0 1 (fontified t)) . -2002) (undo-tree-id494 . -1) 2003 (#("." 0 1 (fontified t)) . 2002) (undo-tree-id495 . -1) 2003) nil (25799 8475 135370 915000) 0 nil] [nil nil ((2008 . 2009)) ((#("9" 0 1 (fontified t)) . 2008)) (25799 7966 201951 555000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -2160) (undo-tree-id488 . -1) (#("0" 0 1 (fontified t)) . -2161) (undo-tree-id489 . -1) (#("0" 0 1 (fontified t)) . -2162) (undo-tree-id490 . -1) 2163) nil (25799 8475 135367 398000) 0 nil])
nil
([nil nil ((#("_" 0 1 (fontified t)) . -2398) (undo-tree-id485 . -1) (#("0" 0 1 (fontified t)) . -2399) (undo-tree-id486 . -1) (#("0" 0 1 (fontified t)) . -2400) (undo-tree-id487 . -1) 2401) nil (25799 8475 135365 152000) 0 nil])
([nil nil ((2528 . 2530) (2507 . 2528) (#("NelderMead" 0 10 (fontified t)) . 2507) (undo-tree-id483 . -9) (undo-tree-id484 . -10) 2517) nil (25799 8475 135363 103000) 0 nil])
([nil nil ((#("CMAEvolutionStrategyOpt" 0 23 (fontified t)) . 2507) (undo-tree-id481 . -22) (undo-tree-id482 . -23) 2530) nil (25799 8475 135361 501000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2529 . 2530) (nil fontified nil 2507 . 2530) (2507 . 2530) 2506) nil (25799 8475 135360 1000) 0 nil])
([nil nil ((#("true" 0 4 (face font-lock-constant-face fontified t)) . 2544) (undo-tree-id478 . -4) (undo-tree-id479 . -3) (undo-tree-id480 . -4) 2548) nil (25799 8475 135359 324000) 0 nil])
([nil nil ((#("= " 0 2 (fontified t)) . 2542) (undo-tree-id475 . -2) (undo-tree-id476 . -1) (undo-tree-id477 . -2) 2544) nil (25799 8475 135357 242000) 0 nil])
([nil nil ((#("verbose " 0 8 (fontified t)) . 2534) (undo-tree-id472 . -8) (undo-tree-id473 . -7) (undo-tree-id474 . -8) 2542) nil (25799 8475 135355 256000) 0 nil])
([nil nil ((#("(), " 0 4 (fontified t)) . 2530) (undo-tree-id465 . 4) (undo-tree-id466 . -4) (undo-tree-id467 . -3) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . 4) (undo-tree-id471 . -4) 2534) nil (25799 8475 135351 782000) 0 nil])
([nil nil ((2530 . 2532)) nil (25799 8475 135306 293000) 0 nil])
([nil nil ((2536 . 2537) (t 25799 8475 240574 250000) 2535) nil (25799 10349 638639 555000) 0 nil])
([nil nil ((2537 . 2540)) nil (25799 10349 638638 781000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2537) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("p" 0 1 (fontified t)) . -2538) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("t" 0 1 (fontified t)) . -2539) (undo-tree-id500 . -1) (undo-tree-id501 . -1) 2540) nil (25799 10349 638637 314000) 0 nil])
([nil nil ((2537 . 2558)) nil (25799 10349 638622 748000) 0 nil])
([nil nil ((2558 . 2559)) nil (25799 10349 638622 283000) 0 nil])
([nil nil ((2559 . 2570)) nil (25799 10349 638621 767000) 0 nil])
([nil nil ((2570 . 2588)) nil (25799 10349 638621 253000) 0 nil])
([nil nil ((2588 . 2596)) nil (25799 10349 638617 34000) 0 nil])
([nil nil ((apply -2 1026 1065 undo--wrap-and-run-primitive-undo 1026 1065 ((1026 . 1028))) (t 25799 10350 54729 927000)) nil (25799 16014 642982 401000) 0 nil])
([nil nil ((apply -2 1065 1125 undo--wrap-and-run-primitive-undo 1065 1125 ((1065 . 1067)))) nil (25799 16014 642980 260000) 0 nil])
([nil nil ((apply -2 1125 1192 undo--wrap-and-run-primitive-undo 1125 1192 ((1125 . 1127)))) nil (25799 16014 642978 689000) 0 nil])
([nil nil ((1666 . 1667) (#("(" 0 1 (fontified t)) . -1666) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t)) . -1667) (undo-tree-id21 . -1) (#(")" 0 1 (fontified t)) . -1668) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) 1669) nil (25799 16014 642975 222000) 0 nil])
([nil nil ((2022 . 2023) (#("5" 0 1 (fontified t)) . -2022) (undo-tree-id10 . -1) 2023 (2017 . 2018) (#("5" 0 1 (fontified t)) . -2017) (undo-tree-id11 . -1) 2018 (1995 . 1999) (#("." 0 1 (fontified t)) . -1995) (undo-tree-id12 . -1) (#("5" 0 1 (fontified t)) . -1996) (undo-tree-id13 . -1) 1997 (1988 . 1993) (#("5" 0 1 (fontified t)) . -1988) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("." 0 1 (fontified t)) . -1989) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 1990 (#("0" 0 1 (fontified t)) . 1990)) nil (25799 16014 642962 221000) 0 nil])
([nil nil ((307 . 310) (#("N" 0 1 (fontified t)) . -307) (undo-tree-id9 . -1) 308 (289 . 308) (288 . 289) 250) nil (25799 16014 642943 721000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2428) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t)) . -2429) (undo-tree-id2 . -1) (#("l" 0 1 (fontified t)) . -2430) (undo-tree-id3 . -1) (#("b" 0 1 (fontified nil)) . -2431) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -2432) (undo-tree-id5 . -1) (#("=" 0 1 (fontified t)) . -2433) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -2434) (undo-tree-id7 . -1) (#("[" 0 1 (fontified t)) . -2435) (undo-tree-id8 . -1) 2436 (2429 . 2436)) nil (25799 16014 642935 434000) 0 nil])
([nil nil ((2428 . 2429)) nil (25799 16014 642917 30000) 0 nil])
([nil nil ((2583 . 2591) (#("0" 0 1 (fontified t)) . -2583) (undo-tree-id0 . -1) 2584 (2568 . 2584) (2549 . 2568) (2545 . 2548) (2524 . 2545) (2518 . 2524) (2510 . 2519)) nil (25799 16014 642909 666000) 0 nil])
([nil nil ((#("CMAEvolutionStrategyOpt" 0 23 (fontified t)) . 2618) (undo-tree-id122 . -23) (undo-tree-id123 . -22) 2641 (t 25799 16014 905055 928000)) nil (25799 18280 264942 687000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (nil fontified nil 2618 . 2641) (2618 . 2641) 2617) nil (25799 18280 264939 50000) 0 nil])
([nil nil (("CMAEvolutionStrategyOpt" . -2618) (undo-tree-id120 . -23) (undo-tree-id121 . -22) 2641) nil (25799 18280 264937 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (nil fontified nil 2618 . 2641) (2618 . 2641) 2617) nil (25799 18280 264929 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2686 . 2687) (nil fontified nil 2647 . 2687) (2647 . 2687) 2646) nil (25799 18280 264928 446000) 0 nil])
([nil nil ((#("CMAEvolutionStrategyOpt" 0 22 (fontified t) 22 23 (fontified t rear-nonsticky t)) . 2618) (undo-tree-id118 . -23) (undo-tree-id119 . -22) 2641) nil (25799 18280 264926 690000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (nil fontified nil 2618 . 2641) (2618 . 2641) 2617) nil (25799 18280 264923 204000) 0 nil])
([nil nil (("CMAEvolutionStrategyOpt" . -2618) (undo-tree-id117 . -23) 2641) nil (25799 18280 264921 762000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (nil fontified nil 2618 . 2641) (2618 . 2641) 2617) nil (25799 18280 264919 354000) 0 nil])
([nil nil ((2614 . 2618) (#("b" 0 1 (fontified t)) . -2614) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("s" 0 1 (fontified nil)) . -2615) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("," 0 1 (fontified t)) . -2616) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified nil)) . -2617) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("C" 0 1 (fontified t)) . -2618) (undo-tree-id94 . -1) (#("M" 0 1 (fontified nil)) . -2619) (undo-tree-id95 . -1) 2620 (#("A" 0 1 (fontified t)) . -2620) (undo-tree-id96 . -1) (#("E" 0 1 (fontified t)) . -2621) (undo-tree-id97 . -1) (#("v" 0 1 (fontified t)) . -2622) (undo-tree-id98 . -1) (#("o" 0 1 (fontified t)) . -2623) (undo-tree-id99 . -1) (#("l" 0 1 (fontified t)) . -2624) (undo-tree-id100 . -1) (#("u" 0 1 (fontified nil)) . -2625) (undo-tree-id101 . -1) (#("t" 0 1 (fontified t)) . -2626) (undo-tree-id102 . -1) (#("i" 0 1 (fontified nil)) . -2627) (undo-tree-id103 . -1) (#("o" 0 1 (fontified t)) . -2628) (undo-tree-id104 . -1) (#("n" 0 1 (fontified t)) . -2629) (undo-tree-id105 . -1) (#("S" 0 1 (fontified nil)) . -2630) (undo-tree-id106 . -1) (#("t" 0 1 (fontified t)) . -2631) (undo-tree-id107 . -1) (#("r" 0 1 (fontified t)) . -2632) (undo-tree-id108 . -1) (#("a" 0 1 (fontified t)) . -2633) (undo-tree-id109 . -1) (#("t" 0 1 (fontified t)) . -2634) (undo-tree-id110 . -1) (#("e" 0 1 (fontified t)) . -2635) (undo-tree-id111 . -1) (#("g" 0 1 (fontified t)) . -2636) (undo-tree-id112 . -1) (#("y" 0 1 (fontified t)) . -2637) (undo-tree-id113 . -1) (#("O" 0 1 (fontified t)) . -2638) (undo-tree-id114 . -1) (#("p" 0 1 (fontified t)) . -2639) (undo-tree-id115 . -1) (#("t" 0 1 (fontified t rear-nonsticky t)) . -2640) (undo-tree-id116 . -1) 2641) nil (25799 18280 264909 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2657 . 2658) (nil fontified nil 2618 . 2658) (2618 . 2658) 2617) nil (25799 18280 264659 732000) 0 nil])
([nil nil ((2658 . 2659) (#("s" 0 1 (fontified t)) . -2658) (undo-tree-id73 . -1) 2659 (2658 . 2659)) nil (25799 18280 264657 443000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2618) (undo-tree-id72 . -1) 2619) nil (25799 18280 264653 966000) 0 nil])
([nil nil ((#(" BBO_adaptive_de_rand_1_bin_radiuslimited
" 0 1 (fontified t) 1 40 (fontified t) 40 41 (rear-nonsticky t fontified t) 41 42 (fontified t)) . 2663) (undo-tree-id69 . -24) (undo-tree-id70 . -41) (undo-tree-id71 . -1) 2687) nil (25799 18280 264651 462000) 0 nil])
([nil nil ((2504 . 2507)) nil (25799 18280 264646 671000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -2321) (undo-tree-id67 . -1) 2322 (2321 . 2322) (2317 . 2320) (#("`" 0 1 (fontified t face font-lock-string-face)) . -2317) (undo-tree-id68 . -1) 2318 (2316 . 2318) (2303 . 2316) (2302 . 2303) 2301) nil (25799 18280 264644 240000) 0 nil])
([nil nil ((#("plot(t, sol.u[1])
" 0 17 (fontified t) 17 18 (fontified t)) . 2303) (undo-tree-id61 . -16) (undo-tree-id62 . -10) (undo-tree-id63 . -17) (undo-tree-id64 . -17) (undo-tree-id65 . -18) (undo-tree-id66 . -18) 2313) nil (25799 18280 264637 366000) 0 nil])
([nil nil ((2322 . 2323) (2320 . 2321) (#("N" 0 1 (fontified t)) . -2320) (undo-tree-id58 . -1) 2321 (2320 . 2322) (#("n" 0 1 (fontified t)) . -2320) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 2321 (2319 . 2321) (2301 . 2319)) nil (25799 18280 264623 921000) 0 nil])
([nil nil ((#("plot(sol, vars = [Sn]) 
" 0 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 2301) (undo-tree-id50 . -19) (undo-tree-id51 . -22) (undo-tree-id52 . -24) (undo-tree-id53 . 1) (undo-tree-id54 . -23) (undo-tree-id55 . -24) (undo-tree-id56 . -24) (undo-tree-id57 . -23) 2323) nil (25799 18280 264615 865000) 0 nil])
([nil nil ((#("362" 0 3 (fontified t)) . 2012) (undo-tree-id48 . -3) (undo-tree-id49 . -2) 2015) nil (25799 18280 264603 109000) 0 nil])
([nil nil ((2009 . 2013) (#("1" 0 1 (fontified t)) . -2009) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("4" 0 1 (fontified t)) . -2010) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 2011 (#("." 0 1 (fontified t)) . 2011) (undo-tree-id47 . -1) 2012) nil (25799 18280 264597 615000) 0 nil])
([nil nil ((2320 . 2321) (2299 . 2320) (2298 . 2299) 2276) nil (25799 18280 264586 262000) 0 nil])
([nil nil ((2009 . 2013) (#("2" 0 1 (fontified t)) . -2009) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("." 0 1 (fontified t)) . -2010) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 2011 (#("95" 0 2 (fontified t)) . 2011) (undo-tree-id39 . -2) (undo-tree-id40 . -1) 2013) nil (25799 18280 264583 278000) 0 nil])
([nil nil ((669 . 670) (#("5" 0 1 (fontified t)) . 669) (undo-tree-id32 . -1) 670) nil (25799 18280 264570 356000) 0 nil])
([nil nil ((#("plot!(sol, vars=Q)
" 0 19 (fontified t)) . 3050) (undo-tree-id25 . -18) (undo-tree-id26 . -18) (undo-tree-id27 . -17) (undo-tree-id28 . 2) (undo-tree-id29 . -18) (undo-tree-id30 . 14) (undo-tree-id31 . -6) 3067) nil (25799 18280 264566 823000) 0 nil])
([nil nil ((3073 . 3074) 3072) nil (25799 18280 566273 834000) 0 nil])
([nil nil ((2048 . 2049) (#("0" 0 1 (fontified t)) . -2048) (undo-tree-id239 . -1) 2049 (2047 . 2049) (#("2" 0 1 (fontified t)) . -2047) (undo-tree-id240 . -1) 2048 (2040 . 2043) (#("9" 0 1 (fontified t)) . -2040) (undo-tree-id241 . -1) 2041 (2031 . 2036) (#("0" 0 1 (fontified t)) . -2031) (undo-tree-id242 . -1) (#("." 0 1 (fontified t)) . -2032) (undo-tree-id243 . -1) (#("9" 0 1 (fontified t)) . -2033) (undo-tree-id244 . -1) (#("5" 0 1 (fontified t)) . -2034) (undo-tree-id245 . -1) 2035 (2023 . 2029) (#("0" 0 1 (fontified t)) . -2023) (undo-tree-id246 . -1) (#("0" 0 1 (fontified t)) . -2024) (undo-tree-id247 . -1) (#("0" 0 1 (fontified t)) . -2025) (undo-tree-id248 . -1) (#("." 0 1 (fontified t)) . -2026) (undo-tree-id249 . -1) (#("0" 0 1 (fontified t)) . -2027) (undo-tree-id250 . -1) 2028 (2011 . 2014) (#("9" 0 1 (fontified t)) . -2011) (undo-tree-id251 . -1) (#("5" 0 1 (fontified t)) . -2012) (undo-tree-id252 . -1) (#("3" 0 1 (fontified t)) . -2013) (undo-tree-id253 . -1) (#("1" 0 1 (fontified t)) . -2014) (undo-tree-id254 . -1) (#("4" 0 1 (fontified t)) . -2015) (undo-tree-id255 . -1) 2016 (2013 . 2016) (3087 . 3097) (3074 . 3087)) nil (25799 18669 78767 719000) 0 nil] [nil nil ((nil rear-nonsticky nil 3074 . 3075) (#("
" 0 1 (fontified nil)) . -3093) (3074 . 3094)) ((#("
plot!(sol, vars=Q)
" 0 1 (fontified nil rear-nonsticky nil) 1 19 (fontified nil) 19 20 (fontified nil)) . 3074) (undo-tree-id131 . -19) (undo-tree-id132 . -1) (undo-tree-id133 . -19) (undo-tree-id134 . -19) (undo-tree-id135 . -2) (undo-tree-id136 . -19) (undo-tree-id137 . -19) (undo-tree-id138 . -1) (undo-tree-id139 . -2) (undo-tree-id140 . -19) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -1) (undo-tree-id220 . -6) (undo-tree-id221 . -17) (undo-tree-id222 . -18) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (3093 . 3094) (nil rear-nonsticky t 3074 . 3075)) (25799 18280 266035 330000) 0 nil])
([nil nil ((2446 . 2447) (#("1" 0 1 (fontified t)) . -2446) (undo-tree-id325 . -1) 2447) nil (25799 22182 943927 524000) 0 nil] [nil nil ((2468 . 2469) 2453) ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1)) (25799 18669 78382 540000) 0 nil])
([nil nil ((3094 . 3095) (3093 . 3094) 3076) ((#("
" 0 1 (fontified t)) . 3093) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("t" 0 1 (fontified t)) . 3094) (undo-tree-id130 . -1)) (25799 18280 164972 301000) 0 nil])
([nil nil ((#("radiuslimite" 0 11 (fontified t) 11 12 (rear-nonsticky t fontified t)) . 2673) (undo-tree-id322 . -12) (undo-tree-id323 . -11) (undo-tree-id324 . -12) 2685) nil (25799 22182 943926 362000) 0 nil])
nil
nil
([nil nil ((#("_" 0 1 (fontified t)) . 2672) (undo-tree-id320 . -1) (undo-tree-id321 . -1) 2673) nil (25799 22182 943924 623000) 0 nil])
([nil nil ((#("bin" 0 3 (fontified t)) . 2669) (undo-tree-id317 . -3) (undo-tree-id318 . -2) (undo-tree-id319 . -3) 2672) nil (25799 22182 943923 192000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2668) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 2669) nil (25799 22182 943921 206000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 2667) (undo-tree-id313 . -1) (undo-tree-id314 . -1) 2668) nil (25799 22182 943919 911000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2666) (undo-tree-id311 . -1) (undo-tree-id312 . -1) 2667) nil (25799 22182 943918 269000) 0 nil])
([nil nil ((#("rand" 0 4 (fontified t)) . 2662) (undo-tree-id308 . -4) (undo-tree-id309 . -3) (undo-tree-id310 . -4) 2666) nil (25799 22182 943916 694000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2661) (undo-tree-id306 . -1) (undo-tree-id307 . -1) 2662) nil (25799 22182 943910 612000) 0 nil])
([nil nil ((#("de" 0 2 (fontified t)) . 2659) (undo-tree-id303 . -2) (undo-tree-id304 . -1) (undo-tree-id305 . -2) 2661) nil (25799 22182 943909 100000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2658) (undo-tree-id301 . -1) (undo-tree-id302 . -1) 2659) nil (25799 22182 943907 463000) 0 nil])
([nil nil ((#("adaptive" 0 8 (fontified t)) . 2650) (undo-tree-id298 . -8) (undo-tree-id299 . -7) (undo-tree-id300 . -8) 2658) nil (25799 22182 943905 545000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2649) (undo-tree-id296 . -1) (undo-tree-id297 . -1) 2650) nil (25799 22182 943903 952000) 0 nil])
([nil nil ((#("BBO" 0 3 (fontified t)) . 2646) (undo-tree-id293 . -3) (undo-tree-id294 . -2) (undo-tree-id295 . -3) 2649) nil (25799 22182 943902 592000) 0 nil])
([nil nil ((2664 . 2669) (2649 . 2664) (2647 . 2649) (2646 . 2647) (#("d" 0 1 (fontified t)) . -2646) (undo-tree-id292 . -1) 2647) nil (25799 22182 943900 770000) 0 nil])
([nil nil ((#("u0" 0 2 (fontified t)) . 2529) (undo-tree-id287 . -1) (undo-tree-id288 . -2) (undo-tree-id289 . -1) (undo-tree-id290 . -2) (undo-tree-id291 . -1) 2531) nil (25799 22182 943899 585000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 2528) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 2529) nil (25799 22182 943895 814000) 0 nil])
([nil nil ((3034 . 3042)) nil (25799 22182 943892 599000) 0 nil])
([nil nil ((649 . 655)) nil (25799 22182 943892 43000) 0 nil])
([nil nil ((2057 . 2073) (2056 . 2057) 2006) nil (25799 22182 943891 120000) 0 nil])
([nil nil ((2370 . 2371) (2356 . 2370) (#("t" 0 1 (fontified t)) . -2356) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 2357 (2355 . 2357) (2350 . 2355) (2349 . 2350) (#("," 0 1 (fontified t)) . -2347) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 2348 (2346 . 2348) (#("S" 0 1 (fontified t)) . -2346) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#("n" 0 1 (fontified t)) . -2347) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 2348) nil (25799 22182 943889 434000) 0 nil])
([nil nil ((3117 . 3121) (3166 . 3182) (3162 . 3166) (#("o" 0 1 (fontified t)) . -3162) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("b" 0 1 (fontified t)) . -3163) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("s" 0 1 (fontified t)) . -3164) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 3165 (3163 . 3165) (3149 . 3163) (#("v" 0 1 (fontified t)) . -3149) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 3150 (3147 . 3150) (3142 . 3147) (3117 . 3118) (3139 . 3141) (3133 . 3139) (#("s" 0 1 (fontified t)) . -3133) (undo-tree-id271 . -1) 3134 (3117 . 3134) (3111 . 3117) (3110 . 3111) (#("o" 0 1 (fontified t)) . -3110) (undo-tree-id272 . -1) (undo-tree-id273 . -1) 3111 (3110 . 3111) (3109 . 3110) 3108) nil (25799 22182 943881 747000) 0 nil])
([nil nil ((3160 . 3161) (3157 . 3160) (3193 . 3194) (3153 . 3154) (3121 . 3125) (3185 . 3186) (3146 . 3147)) nil (25799 22182 943833 445000) 0 nil])
([nil nil ((3066 . 3078)) nil (25799 22182 943831 647000) 0 nil])
([nil nil ((3186 . 3187)) nil (25799 22182 943830 598000) 0 nil])
([nil nil ((#("CMAEvolutionStrategyOpt" 0 23 (fontified t)) . 2687) (undo-tree-id261 . -22) (undo-tree-id262 . -23) 2710) nil (25799 22182 944812 145000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2726 . 2727) (nil fontified nil 2687 . 2727) (2687 . 2727) 2686) nil (25799 26609 251508 536000) 0 nil] [nil nil ((nil rear-nonsticky nil 2727 . 2728) (nil fontified nil 2688 . 2728) (2688 . 2728) 2687) ((#("BBO_adaptive_de_rand_1_bin_radiuslimited" 0 39 (fontified nil) 39 40 (fontified nil rear-nonsticky nil)) . 2688) (undo-tree-id326 . -39) (undo-tree-id327 . -39) (undo-tree-id328 . -39) (undo-tree-id329 . -40) (undo-tree-id330 . -39) (nil rear-nonsticky t 2727 . 2728)) (25799 22182 929838 346000) 0 nil])
([nil nil ((2497 . 2499) (2490 . 2491) (#("5" 0 1 (fontified t)) . -2490) (undo-tree-id427 . -1) 2491) nil (25799 26609 251508 112000) 0 nil])
nil
([nil nil ((2074 . 2089) (2073 . 2074) 2057) nil (25799 26609 251507 366000) 0 nil])
([nil nil ((3161 . 3167)) nil (25799 26609 251507 1000) 0 nil])
([nil nil ((3161 . 3163) (3211 . 3212) (#(")" 0 1 (fontified t)) . -3208) (undo-tree-id382 . -1) (undo-tree-id383 . 1) (undo-tree-id384 . -1) 3209 (#(")" 0 1 (fontified t)) . -3212) (undo-tree-id385 . -1) (undo-tree-id386 . 1) (undo-tree-id387 . -1) (#(")" 0 1 (fontified t)) . -3213) (undo-tree-id388 . -1) (undo-tree-id389 . 1) (undo-tree-id390 . -1) (#(")" 0 1 (fontified t)) . -3214) (undo-tree-id391 . -1) (undo-tree-id392 . 1) (undo-tree-id393 . -1) 3215 (3213 . 3215) (3206 . 3207) (#("]" 0 1 (fontified t)) . -3206) (undo-tree-id394 . -1) (undo-tree-id395 . 1) (undo-tree-id396 . -1) 3207 (#("obs[1:1095" 0 10 (fontified t)) . -3206) (undo-tree-id397 . -10) (undo-tree-id398 . -10) 3216 (3196 . 3197) (#("]" 0 1 (fontified t)) . -3196) (undo-tree-id399 . -1) (undo-tree-id400 . 1) (undo-tree-id401 . -1) 3197 (#("(obs[1:1095" 0 11 (fontified t)) . -3196) (undo-tree-id402 . -11) (undo-tree-id403 . -11) 3207 (3183 . 3185) (#("Q" 0 1 (fontified t)) . -3183) (undo-tree-id404 . -1) (#("]" 0 1 (fontified t)) . -3184) (undo-tree-id405 . -1) (undo-tree-id406 . 1) (undo-tree-id407 . -1) (#(")" 0 1 (fontified t)) . -3185) (undo-tree-id408 . -1) (undo-tree-id409 . 1) (undo-tree-id410 . -1) 3186 (#("newsol[" 0 7 (fontified t)) . -3183) (undo-tree-id411 . -7) (undo-tree-id412 . -7) 3190 (#("]" 0 1 (fontified t)) . -3180) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . 1) (undo-tree-id416 . -1) 3181 (3179 . 3180) (#("o" 0 1 (fontified t)) . -3179) (undo-tree-id417 . -1) (#("b" 0 1 (fontified t)) . -3180) (undo-tree-id418 . -1) (#("s" 0 1 (fontified t)) . -3181) (undo-tree-id419 . -1) (#("[" 0 1 (fontified t)) . -3182) (undo-tree-id420 . -1) (#("1" 0 1 (fontified t)) . -3183) (undo-tree-id421 . -1) (#(":" 0 1 (fontified t)) . -3184) (undo-tree-id422 . -1) (#("1" 0 1 (fontified t)) . -3185) (undo-tree-id423 . -1) (#("0" 0 1 (fontified t)) . -3186) (undo-tree-id424 . -1) (#("9" 0 1 (fontified t)) . -3187) (undo-tree-id425 . -1) (#("5" 0 1 (fontified t)) . -3188) (undo-tree-id426 . -1) 3189) nil (25799 26609 251504 188000) 0 nil])
([nil nil ((2388 . 2394) (2387 . 2388) 2366) nil (25799 26609 251370 626000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2245) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -2246) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#(" " 0 1 (fontified t)) . -2247) (undo-tree-id367 . -1) (#("=" 0 1 (fontified t)) . -2248) (undo-tree-id368 . -1) (#(" " 0 1 (fontified t)) . -2249) (undo-tree-id369 . -1) (#("t" 0 1 (fontified t)) . -2250) (undo-tree-id370 . -1) (#("r" 0 1 (fontified t)) . -2251) (undo-tree-id371 . -1) (#("u" 0 1 (fontified t)) . -2252) (undo-tree-id372 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -2253) (undo-tree-id373 . -1) 2254 (#("verbose" 0 7 (fontified t)) . -2247) (undo-tree-id374 . -7) (undo-tree-id375 . -7) 2254 (2243 . 2246) (#(" " 0 1 (fontified t)) . -2243) (undo-tree-id376 . -1) 2244 (2239 . 2244) (#("t" 0 1 (fontified t)) . -2239) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("a" 0 1 (fontified t)) . -2240) (undo-tree-id379 . -1) (#("a" 0 1 (fontified t)) . -2241) (undo-tree-id380 . -1) (#("t" 0 1 (fontified t)) . -2242) (undo-tree-id381 . -1) 2243 (2234 . 2243)) nil (25799 26609 251368 484000) 0 nil])
([nil nil ((2409 . 2410) (#(" " 0 1 (fontified t)) . -2409) (undo-tree-id359 . -1) 2410 (2390 . 2403) (#("," 0 1 (fontified t)) . -2396) (undo-tree-id360 . -1) (#("=" 0 1 (fontified t)) . -2397) (undo-tree-id361 . -1) 2398 (2397 . 2398) (2390 . 2398)) nil (25799 26609 251360 432000) 0 nil])
([nil nil ((3221 . 3222) (3233 . 3234)) nil (25799 26609 251358 642000) 0 nil])
([nil nil ((2085 . 2088) (#("1" 0 1 (fontified t)) . -2085) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("." 0 1 (fontified t)) . -2086) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("6" 0 1 (fontified t)) . -2087) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("7" 0 1 (fontified t)) . -2088) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 2089) nil (25799 26609 251357 732000) 0 nil])
([nil nil ((2409 . 2410) 2383) nil (25799 26609 251353 627000) 0 nil])
([nil nil ((2085 . 2089) (#("0" 0 1 (fontified t)) . -2085) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("." 0 1 (fontified t)) . -2086) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("5" 0 1 (fontified t)) . -2087) (undo-tree-id349 . -1) (undo-tree-id350 . -1) 2088) nil (25799 26609 251352 717000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -649) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("*" 0 1 (fontified t)) . -650) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#(" " 0 1 (fontified t)) . -651) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("3" 0 1 (fontified t)) . -652) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("." 0 1 (fontified t)) . -653) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#("0" 0 1 (fontified t)) . -654) (undo-tree-id341 . -1) (undo-tree-id342 . -1) 655) nil (25799 26609 251344 434000) 0 nil])
nil
